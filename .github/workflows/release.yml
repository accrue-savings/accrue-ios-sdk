name: Release  ###

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: 'write'
  id-token: 'write'
  pull-requests: 'write'

jobs:
  version:
    name: Release Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.next }}
      from_tag: ${{ steps.semver.outputs.next }}
      to_tag: ${{ steps.semver.outputs.current }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        
      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          branch: 'main'
          token: ${{ github.token }}
          skipInvalidTags: true
          patchList: chore, fix, bugfix, perf, refactor, test, tests, ci
          maxTagsToFetch: 40

      - name: Update PackageVersion file
        run: |
          NEXT_VERSION=$(echo ${{ steps.semver.outputs.next }} | cut -d v -f 2)
          cat <<EOF > ./PackageVersion.swift
          public struct PackageVersion {
            public static let version = "${NEXT_VERSION}"
          }
          EOF
          git config --global user.name "Github Workflow"
          git config --global user.email "githubworkflow@accruemoney.com"
          git add -A
          git commit -m 'build:updating PackageVersion.swift [skip ci]'
          git push origin main
          sleep 10

      - name: Create Pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.semver.outputs.next }}
          generate_release_notes: true
          prerelease: true
          make_latest: false
          target_commitish: 'main'

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ steps.semver.outputs.next }}
          toTag: ${{ steps.semver.outputs.current }}
          writeToFile: false
          includeRefIssues: false

  create-release:
    name: create-release
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.version.outputs.version }}
          body: ${{ needs.version.outputs.body }}
          prerelease: false
          make_latest: true